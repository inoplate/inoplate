{"version":3,"sources":["index.coffee"],"names":[],"mappings":"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","file":"index.js","sourcesContent":["$ '#users-register-form, #users-update-form'\n    .modal\n        show: false\n\n$ document\n    .on 'ajax.form.success', '#trashed-restore', (evt, data, textStatus, jqXHR) ->\n        activeUsersTable.draw()\n\n$ document\n    .on 'ajax.form.success', '#active-delete', (evt, data, textStatus, jqXHR) ->\n        trashedUsersTable.draw()\n\n$ 'form.ajax', '#users-register-form, #users-update-form'\n    .on 'ajax.form.success', (evt, data, textStatus, jqXHR) ->\n        $ this\n            .trigger \"reset\"\n\n        $ this\n            .parents '.modal'\n            .modal 'hide'\n\n        $ 'select', this\n            .trigger 'change'\n\n        activeUsersTable.draw()\n\n$ '#active-users-table'\n    .on 'click', '.active-users-update', () ->\n        that = this\n        selectedRoles = []\n        url = $ this\n                  .prop 'href'\n\n        $('form', '#users-update-form')[0]\n            .reset()\n\n        $ 'select', '#users-update-form'\n            .trigger 'change'\n\n        $overlay = $ '.overlay', '#users-update-form'\n\n        $ '#users-update-form'\n            .modal 'show'\n        \n        $overlay.removeClass 'hide'\n\n        $.get url, (result) ->\n            $overlay.addClass 'hide'\n\n            $ 'form', '#users-update-form'\n                .prop 'action', \"/admin/inoplate-account/users/#{result.user.id}/edit\"\n\n            $ 'input[name=\"username\"]', '#users-update-form'\n                .val result.user.username\n            $ 'input[name=\"email\"]', '#users-update-form'\n                .val result.user.email\n            $ 'input[name=\"name\"]', '#users-update-form'\n                .val result.user.description.name\n            $ 'select[name=\"status\"]', '#users-update-form'\n                .val result.user.description.active\n\n            $.each result.user.roles, () ->\n                selectedRoles.push(result.user.roles.id)\n\n            selectedRoles = for key, role of result.user.roles\n                \"#{role.id}\"\n\n            $ 'select[name=\"roles[]\"]', '#users-update-form'\n                .val selectedRoles\n\n            $ 'select', '#users-update-form'\n                .trigger 'change'\n\n        false\n\n\nactiveUsersTable = $ '#active-users-table'\n                        .DataTable\n                            order: [[ 6, \"desc\" ]],\n                            columns: [\n                                \"name\": \"id\"\n                            ,\n                                \"name\": \"username\"\n                            ,\n                                \"name\": \"email\"\n                            ,\n                                \"name\": \"name\"\n                            ,\n                                \"name\": \"roles\"\n                            ,\n                                \"name\": \"active\"\n                            ,\n                                \"name\": \"created_at\"\n                            ,\n                                \"name\": \"actions\"\n                            ],\n                            columnDefs: [\n                                targets: 0\n                                sortable: false\n                                searchable: false\n                            ,\n                                targets: 4\n                                searchable: false\n                                sortable: false\n                                render: (data, type, row, meta) ->\n                                    rendered = ''\n                                    rendered += \"<span class=\\\"label bg-blue\\\">#{role}</span> \" for role, i in data\n\n                                    return rendered\n                            ,\n                                targets: 5\n                                render: (data, type, row, meta) ->\n                                    return if data == 1 then '<span class=\\\"label bg-blue\\\">Active</span>' else '<span class=\\\"label bg-orange\\\">Inactive</span>'\n                            ,\n                                targets: 6\n                                render: (data, type, row, meta) ->\n                                    return moment data\n                                                .format 'LL'\n                            ,\n                                targets: 7\n                                searchable: false\n                                sortable: false\n                                render: (data, type, row, meta) ->\n                                    rendered = '<div class=\"text-right\">'\n                                    token = $ 'meta[name=\"csrf-token\"]'\n                                                .attr 'content'\n\n                                    if $.inArray 'update', data != -1 then rendered += \"<a href=\\\"/admin/inoplate-account/users/#{row[0]}/edit\\\" class=\\\"btn btn-default btn-sm active-users-update\\\"><i class=\\\"fa fa-pencil\\\"></i></a>\"\n\n                                    rendered += '</div>'\n\n                                    return rendered\n                            ]\n                            ajax: \n                                url: 'admin/inoplate-account/users/datatables'\n                                data: (d) ->\n                                    d.roles = $ 'select[name=\"roles[]\"]'\n                                                .val()\n                                    d.active = $ 'select[name=\"active\"]'\n                                                .val()\n\n                                    return\n\n                            buttons: true\n\ntrashedUsersTable = $ '#trashed-users-table'\n                        .DataTable\n                            order: [[ 6, \"desc\" ]],\n                            columns: [\n                                \"name\": \"id\"\n                            ,\n                                \"name\": \"username\"\n                            ,\n                                \"name\": \"email\"\n                            ,\n                                \"name\": \"name\"\n                            ,\n                                \"name\": \"roles\"\n                            ,\n                                \"name\": \"active\"\n                            ,\n                                \"name\": \"deleted_at\"\n                            ],\n                            columnDefs: [\n                                targets: 0\n                                sortable: false\n                                searchable: false\n                            ,\n                                targets: 4\n                                searchable: false\n                                sortable: false\n                                render: (data, type, row, meta) ->\n                                    rendered = ''\n                                    rendered += \"<span class=\\\"label bg-blue\\\">#{role}</span> \" for role, i in data\n\n                                    return rendered\n                            ,\n                                targets: 5\n                                render: (data, type, row, meta) ->\n                                    return if data == 1 then '<span class=\\\"label bg-blue\\\">Active</span>' else '<span class=\\\"label bg-orange\\\">Inactive</span>'\n                            ,\n                                targets: 6\n                                render: (data, type, row, meta) ->\n                                    return moment data\n                                                .format 'LL'\n                            ]\n                            ajax: \n                                url: 'admin/inoplate-account/users/datatables/trashed'\n                                data: (d) ->\n                                    d.roles = $ 'select[name=\"roles[]\"]'\n                                                .val()\n                                    d.active = $ 'select[name=\"active\"]'\n                                                .val()\n\n                                    return\n\n                            buttons: true\n\nactiveUsersButtons = $ '#active-users-table'\n                        .data 'actions'\n\nincr = 2;\n\nindex = $.inArray 'delete', activeUsersButtons\n\nif index != -1 \n    index += incr;\n    activeUsersTable.button()\n        .add index,\n            extend: 'bulk'\n            method: 'delete'\n            url: 'admin/inoplate-account/users'\n            text: '<i class=\"fa fa-user-times\"></i> Unregister selected users'\n            className: 'btn btn-sm btn-danger pull-right'\n            formId: 'active-delete'\n\nincr = index\n\nindex = $.inArray 'register', activeUsersButtons\n\nif index != -1 \n    index += incr;\n    activeUsersTable.button()\n        .add index,\n            text: '<i class=\"fa fa-user-plus\"></i> Register new user'\n            url: 'admin/inoplate-account/users/register'\n            className: 'btn btn-sm btn-primary pull-right'\n            init: ( dt, button, config )->\n                $ button.prop \"href\", config.url\n            action: (e, dt, node, config) ->\n                container = dt.table().container()\n\n                $ '#users-register-form'\n                    .modal 'show'\n\n                return\n\ntrashedUsersButtons = $ '#trashed-users-table'\n                        .data 'actions'\n\nincr = 2;\n\nindex = $.inArray 'delete', trashedUsersButtons\n\nif index != -1 \n    index += incr;\n    trashedUsersTable.button()\n        .add index,\n            extend: 'bulk'\n            method: 'delete'\n            url: 'admin/inoplate-account/users/delete'\n            text: '<i class=\"fa fa-times\"></i> Permanently delete selected users'\n            className: 'btn btn-sm btn-danger pull-right'\n            formClass: 'undoable'\n\nincr = index\n\nindex = $.inArray 'register', trashedUsersButtons\n\nif index != -1 \n    index += incr;\n    trashedUsersTable.button()\n        .add index,\n            extend: 'bulk'\n            method: 'put'\n            formId: 'trashed-restore'\n            text: '<i class=\"fa fa-undo\"></i> Restore selected users'\n            url: 'admin/inoplate-account/users/restore'\n            className: 'btn btn-sm btn-info pull-right'"],"sourceRoot":"/source/"}